(define (format format-string . objects)
  (let loop ((format-list (string->list format-string))
             (objects objects))
    (cond ((null? format-list) #t)
          ((char=? (car format-list) #\~)
           (if (null? (cdr format-list))
               (error 'format "Incomplete escape sequence")
               (case (cadr format-list)
                 ((#\a)
                  (if (null? objects)
                      (error 'format "No value for escape sequence")
                      (begin
                        (display (car objects))
                        (loop (cddr format-list) (cdr objects)))))
                 ((#\s)
                  (if (null? objects)
                      (error 'format "No value for escape sequence")
                      (begin
                        (write (car objects))
                        (loop (cddr format-list) (cdr objects)))))
                 ((#\%)
                  (newline)
                  (loop (cddr format-list) objects))
                 ((#\~)
                  (write-char #\~)
                  (loop (cddr format-list) objects))
                 (else
                  (error 'format "Unrecognized escape sequence")))))
          (else (write-char (car format-list))
                (loop (cdr format-list) objects)))))
